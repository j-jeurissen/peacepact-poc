version: '3'

services:
  #Automated nginx proxy for Docker containers using docker-gen https://github.com/jwilder/nginx-proxy
  #alpine has HTTP/2 support(valid ssl cert required)
  webproxy:
    image: jwilder/nginx-proxy:alpine
    container_name: nginx-proxy
    restart: always
    labels:
      com.github.jrcs.letsencrypt_nginx_proxy_companion.nginx_proxy: 'true'
    ports:
    - 80:80
    - 443:443
    volumes:
    - ./data/nginx/certs:/etc/nginx/certs:ro
    - ./data/nginx/conf.d:/etc/nginx/conf.d
    - ./data/nginx/vhost.d:/etc/nginx/vhost.d
    - ./data/nginx/html:/usr/share/nginx/html
    - /var/run/docker.sock:/tmp/docker.sock:ro
    networks:
    - webproxy

  webproxy-ssl-companion:
    #LetsEncrypt companion container for nginx-proxy https://github.com/JrCs/docker-letsencrypt-nginx-proxy-companion
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: letsencrypt-nginx-proxy-companion
    volumes:
    - ./data/nginx/vhost.d:/etc/nginx/vhost.d
    - ./data/nginx/certs:/etc/nginx/certs:rw
    - ./data/nginx/html:/usr/share/nginx/html
    - /var/run/docker.sock:/var/run/docker.sock:ro
    depends_on:
    - webproxy
    networks:
    - webproxy

  keycloak:
    image: jboss/keycloak
    container_name: keycloak
    restart: always
    environment:
      DB_DATABASE: ${KEYCLOAK_DB_DATABASE}
      DB_USER: ${KEYCLOAK_DB_USER}
      DB_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
      JDBC_PARAMS: ${JDBC_PARAMS}
      KEYCLOAK_HOSTNAME: ${KEYCLOAK_HOSTNAME}
      KEYCLOAK_HTTP_PORT: ${KEYCLOAK_HTTP_PORT}
      KEYCLOAK_USER: ${KEYCLOAK_USER}
      KEYCLOAK_PASSWORD: ${KEYCLOAK_PASSWORD}
      #nginx-proxy
      VIRTUAL_HOST: ${KEYCLOAK_VIRTUAL_HOST}
      VIRTUAL_PORT: ${KEYCLOAK_VIRTUAL_PORT}
      PROXY_ADDRESS_FORWARDING: ${PROXY_ADDRESS_FORWARDING}
      LETSENCRYPT_HOST: ${KEYCLOAK_LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    depends_on:
    - keycloak-relational-database
    networks:
    - webproxy

  keycloak-relational-database:
    image: postgres
    container_name: keycloak_postgres
    restart: always
    environment:
      POSTGRES_DB: ${KEYCLOAK_DB_DATABASE}
      POSTGRES_USER: ${KEYCLOAK_DB_USER}
      POSTGRES_PASSWORD: ${KEYCLOAK_DB_PASSWORD}
    volumes:
    - keycloak-relational-database-data:/var/lib/postgresql/data
    networks:
    - webproxy

  wordpress:
    depends_on:
    - keycloak-relational-database
    build:
      context: ./docker-images/wordpress
    image: jjeurissen/wordpress-peacepact-poc:latest
    restart: always
    environment:
      WORDPRESS_DB_HOST: wordpress-relational-database:3306
      WORDPRESS_DB_USER: ${WORDPRESS_DB_USER}
      WORDPRESS_DB_PASSWORD: ${WORDPRESS_DB_PASSWORD}
      VIRTUAL_HOST: ${WORDPRESS_VIRTUAL_HOST}
      VIRTUAL_PORT: ${WORDPRESS_VIRTUAL_PORT}
      LETSENCRYPT_HOST: ${WORDPRESS_LETSENCRYPT_HOST}
      LETSENCRYPT_EMAIL: ${LETSENCRYPT_EMAIL}
    working_dir: /var/www/html
    volumes:
      - ./data/wordpress/wp-content:/var/www/html/wp-content
      - ./data/wordpress/uploads.ini:/usr/local/etc/php/conf.d/uploads.ini
    networks:
    - webproxy

  wordpress-relational-database:
    image: mariadb:latest
    volumes:
    - wordpress-relational-database-data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: somewordpress
      MYSQL_DATABASE: wordpress
      MYSQL_USER: wordpress
      MYSQL_PASSWORD: wordpress
    networks:
    - webproxy

networks:
  webproxy:

volumes:
  keycloak-relational-database-data:
  wordpress-relational-database-data: